// <auto-generated />
using System;
using GestionStages.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionStages.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250913233338_AddParametreTable")]
    partial class AddParametreTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionStages.Models.Admin", b =>
                {
                    b.Property<int>("IdAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAdmin"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomComplet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("IdAdmin");

                    b.HasIndex("UtilisateurId")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("GestionStages.Models.Document", b =>
                {
                    b.Property<int>("IdDocument")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDocument"));

                    b.Property<DateTime>("DateDepot")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLimiteRapportFinal")
                        .HasColumnType("datetime2");

                    b.Property<int>("EtudiantId")
                        .HasColumnType("int");

                    b.Property<string>("NomFichier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StageId")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeDocument")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDocument");

                    b.HasIndex("EtudiantId");

                    b.HasIndex("StageId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("GestionStages.Models.Enseignant", b =>
                {
                    b.Property<int>("IdEnseignant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEnseignant"));

                    b.Property<string>("DepartementAttache")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Filiere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomEnseignant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("IdEnseignant");

                    b.HasIndex("UtilisateurId")
                        .IsUnique();

                    b.ToTable("Enseignants");
                });

            modelBuilder.Entity("GestionStages.Models.Etudiant", b =>
                {
                    b.Property<int>("IdEtudiant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEtudiant"));

                    b.Property<string>("CNE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Filiere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Niveau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomComplet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("IdEtudiant");

                    b.HasIndex("UtilisateurId")
                        .IsUnique();

                    b.ToTable("Etudiants");
                });

            modelBuilder.Entity("GestionStages.Models.Organisme", b =>
                {
                    b.Property<int>("IdOrganisme")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrganisme"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailResponsable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FonctionResponsable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomOrganisme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomResponsable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecteurActivite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneResponsable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdOrganisme");

                    b.ToTable("Organismes");
                });

            modelBuilder.Entity("GestionStages.Models.Soutenance", b =>
                {
                    b.Property<int>("IdSoutenance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSoutenance"));

                    b.Property<DateTime?>("DateSoutenance")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionSujet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jury1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jury2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomSujet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("NoteFinale")
                        .HasColumnType("float");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.Property<string>("StatutSujet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSoutenance");

                    b.HasIndex("StageId")
                        .IsUnique();

                    b.ToTable("Soutenances");
                });

            modelBuilder.Entity("GestionStages.Models.Stage", b =>
                {
                    b.Property<int>("IdStage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStage"));

                    b.Property<bool>("AutorisationTraitement")
                        .HasColumnType("bit");

                    b.Property<bool>("ConfirmationEtudiant")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSoumission")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnseignantId")
                        .HasColumnType("int");

                    b.Property<int?>("EnseignantIdEnseignant")
                        .HasColumnType("int");

                    b.Property<int>("EtudiantId")
                        .HasColumnType("int");

                    b.Property<int?>("EtudiantIdEtudiant")
                        .HasColumnType("int");

                    b.Property<string>("NomSignature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganismeId")
                        .HasColumnType("int");

                    b.Property<int?>("OrganismeIdOrganisme")
                        .HasColumnType("int");

                    b.Property<string>("Theme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeStage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStage");

                    b.HasIndex("EnseignantId");

                    b.HasIndex("EnseignantIdEnseignant");

                    b.HasIndex("EtudiantId");

                    b.HasIndex("EtudiantIdEtudiant");

                    b.HasIndex("OrganismeId");

                    b.HasIndex("OrganismeIdOrganisme");

                    b.ToTable("Stages");
                });

            modelBuilder.Entity("GestionStages.Models.Suivi", b =>
                {
                    b.Property<int>("IdSuivi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSuivi"));

                    b.Property<string>("CommentairePedagogique")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateSuivi")
                        .HasColumnType("datetime2");

                    b.Property<int>("EnseignantId")
                        .HasColumnType("int");

                    b.Property<double?>("NoteStage")
                        .HasColumnType("float");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.HasKey("IdSuivi");

                    b.HasIndex("EnseignantId");

                    b.HasIndex("StageId");

                    b.ToTable("Suivis");
                });

            modelBuilder.Entity("GestionStages.Models.Utilisateur", b =>
                {
                    b.Property<int>("IdUtilisateur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUtilisateur"));

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomUtilisateur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUtilisateur");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("GestionStages.Models.Validation", b =>
                {
                    b.Property<int>("IdValidation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdValidation"));

                    b.Property<DateTime>("DateValidation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etape")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarque")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValidePar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdValidation");

                    b.HasIndex("StageId");

                    b.ToTable("Validations");
                });

            modelBuilder.Entity("GestionStages.Models.Admin", b =>
                {
                    b.HasOne("GestionStages.Models.Utilisateur", "Utilisateur")
                        .WithOne("Admin")
                        .HasForeignKey("GestionStages.Models.Admin", "UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("GestionStages.Models.Document", b =>
                {
                    b.HasOne("GestionStages.Models.Etudiant", "Etudiant")
                        .WithMany("Documents")
                        .HasForeignKey("EtudiantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GestionStages.Models.Stage", "Stage")
                        .WithMany("Documents")
                        .HasForeignKey("StageId");

                    b.Navigation("Etudiant");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("GestionStages.Models.Enseignant", b =>
                {
                    b.HasOne("GestionStages.Models.Utilisateur", "Utilisateur")
                        .WithOne("Enseignant")
                        .HasForeignKey("GestionStages.Models.Enseignant", "UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("GestionStages.Models.Etudiant", b =>
                {
                    b.HasOne("GestionStages.Models.Utilisateur", "Utilisateur")
                        .WithOne("Etudiant")
                        .HasForeignKey("GestionStages.Models.Etudiant", "UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("GestionStages.Models.Soutenance", b =>
                {
                    b.HasOne("GestionStages.Models.Stage", "Stage")
                        .WithOne("Soutenance")
                        .HasForeignKey("GestionStages.Models.Soutenance", "StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("GestionStages.Models.Stage", b =>
                {
                    b.HasOne("GestionStages.Models.Enseignant", "Enseignant")
                        .WithMany()
                        .HasForeignKey("EnseignantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GestionStages.Models.Enseignant", null)
                        .WithMany("Stages")
                        .HasForeignKey("EnseignantIdEnseignant");

                    b.HasOne("GestionStages.Models.Etudiant", "Etudiant")
                        .WithMany()
                        .HasForeignKey("EtudiantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GestionStages.Models.Etudiant", null)
                        .WithMany("Stages")
                        .HasForeignKey("EtudiantIdEtudiant");

                    b.HasOne("GestionStages.Models.Organisme", "Organisme")
                        .WithMany()
                        .HasForeignKey("OrganismeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GestionStages.Models.Organisme", null)
                        .WithMany("Stages")
                        .HasForeignKey("OrganismeIdOrganisme");

                    b.Navigation("Enseignant");

                    b.Navigation("Etudiant");

                    b.Navigation("Organisme");
                });

            modelBuilder.Entity("GestionStages.Models.Suivi", b =>
                {
                    b.HasOne("GestionStages.Models.Enseignant", "Enseignant")
                        .WithMany("Suivis")
                        .HasForeignKey("EnseignantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionStages.Models.Stage", "Stage")
                        .WithMany("Suivis")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enseignant");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("GestionStages.Models.Validation", b =>
                {
                    b.HasOne("GestionStages.Models.Stage", "Stage")
                        .WithMany("Validations")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("GestionStages.Models.Enseignant", b =>
                {
                    b.Navigation("Stages");

                    b.Navigation("Suivis");
                });

            modelBuilder.Entity("GestionStages.Models.Etudiant", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Stages");
                });

            modelBuilder.Entity("GestionStages.Models.Organisme", b =>
                {
                    b.Navigation("Stages");
                });

            modelBuilder.Entity("GestionStages.Models.Stage", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Soutenance")
                        .IsRequired();

                    b.Navigation("Suivis");

                    b.Navigation("Validations");
                });

            modelBuilder.Entity("GestionStages.Models.Utilisateur", b =>
                {
                    b.Navigation("Admin")
                        .IsRequired();

                    b.Navigation("Enseignant")
                        .IsRequired();

                    b.Navigation("Etudiant")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
