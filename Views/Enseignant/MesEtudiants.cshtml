@model IEnumerable<GestionStages.Models.ViewModels.MesEtudiantsViewModel>

@{
    Layout = "_LayoutEnseignant";
    ViewData["Title"] = "Mes Étudiants";
}

<div class="container mt-5">
    <h2 class="fw-bold mb-4" style="color:#a87c4f;">
        <i class="fas fa-user-graduate"></i> Mes Étudiants Encadrés
    </h2>

    @if (!Model.Any())
    {
        <div class="alert alert-info shadow-sm rounded">
            Aucun étudiant encadré pour le moment.
        </div>
    }
    else
    {
        <div class="table-responsive shadow-sm rounded" style="background:#fff; border:2px solid #a87c4f;">
            <table class="table table-hover align-middle mb-0" style="border-radius:12px; overflow:hidden;">
                <thead style="background: linear-gradient(45deg, #a87c4f, #f4d8b4); color:white;">
                    <tr>
                        <th>Nom complet</th>
                        <th>CNE</th>
                        <th>Email</th>
                        <th>Téléphone</th>
                        <th>Filière</th>
                        <th>Niveau</th>
                        <th>Sujet</th>
                        <th>Description Sujet</th>
                        <th>Note Finale</th>
                        <th>Statut</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var e in Model)
                    {
                        <tr style="transition: background 0.3s;">
                            <td>@e.EtudiantNom</td>
                            <td>@e.EtudiantCNE</td>
                            <td>@e.EtudiantEmail</td>
                            <td>@e.EtudiantTelephone</td>
                            <td>@e.EtudiantFiliere</td>
                            <td>@e.EtudiantNiveau</td>
                            <td>@e.SujetTitre</td>
                            <td>@e.SujetDescription</td>
                            <td>
                                <span class="badge bg-light text-dark border">
                                    @e.NoteFinale
                                </span>
                            </td>
                            <td>
                                @if (double.TryParse(e.NoteFinale, out double note))
                                {
                                    <span class="badge @(note >= 12 ? "bg-success" : "bg-danger")">
                                        @(note >= 12 ? "Validé" : "Refusé")
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">Non noté</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<style>
    body {
        background-color: #f9f7f1;
        font-family: 'Segoe UI', sans-serif;
        color: #333;
    }

    table th, table td {
        vertical-align: middle;
        padding: 12px 15px;
    }

    table tbody tr:hover {
        background-color: #fff4e6 !important;
    }

    .badge {
        font-size: 0.9rem;
        padding: 0.4em 0.7em;
        border-radius: 50px;
    }
</style>
